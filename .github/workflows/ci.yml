name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  dbt_ci:
    runs-on: ubuntu-latest

    env:
      GCP_KEYFILE_JSON: ${{ secrets.GCP_KEYFILE_JSON }}
      MANIFEST_ARTIFACT: manifest-main

    steps:
      # ── 0) Checkout + Python ──────────────────────────────────
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # ── 1) Dépendances (dbt, lint, tests) ─────────────────────
      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install "dbt-bigquery~=1.9" "sqlfluff~=3.4" \
                     "dbt-unit-testing==0.4.1"

      # ── 2) Écrire la clé dans /tmp/keyfile.json ───────────────
      - name: Write keyfile.json
        run: |
          echo "$GCP_KEYFILE_JSON" > /tmp/keyfile.json
          python - <<'PY'
          import json, sys
          try:
              json.load(open("/tmp/keyfile.json"))
              print("✅ keyfile.json is valid JSON")
          except Exception as e:
              print("❌ keyfile.json invalid:", e)
              sys.exit(1)
          PY

      # ── 3) Créer ~/.dbt/profiles.yml ──────────────────────────
      - name: Write dbt profile
        run: |
          mkdir -p ~/.dbt
          cat > ~/.dbt/profiles.yml <<'YAML'
          my_first_dbt_project:
            target: dev
            outputs:
              dev:
                type: bigquery
                method: service-account
                project: bubbly-granite-456918-p0
                dataset: FIL_ROUGE
                location: US
                threads: 4
                keyfile: /tmp/keyfile.json
          YAML

      # ── 4) Récupérer l’ancien manifest (Slim CI) ──────────────
      - name: Download previous manifest (if any)
        if: github.event_name == 'pull_request'
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.MANIFEST_ARTIFACT }}
          path: .dbt_artifacts
        continue-on-error: true

      # ── 5) Lint SQL (warning pour l’instant) ──────────────────
      - name: Lint SQL with sqlfluff
        run: sqlfluff lint models/ || true

      # ── 6) dbt deps + compile (dry-run) ───────────────────────
      - name: dbt deps
        run: dbt deps

      - name: dbt compile
        run: dbt compile

      # ── 7) Build & tests Slim CI ──────────────────────────────
      - name: dbt build (state:modified)
        run: |
          dbt build \
            --select state:modified+ \
            --defer \
            --state ./.dbt_artifacts || true

      - name: dbt test (state:modified)
        run: dbt test --select state:modified+ || true

      - name: dbt unit tests
        run: dbt ut || true

      # ── 8) Upload manifest si merge sur main ──────────────────
      - name: Upload manifest.json
        if: github.ref == 'refs/heads/main' && success()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.MANIFEST_ARTIFACT }}
          path: target/manifest.json
          retention-days: 14

